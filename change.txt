name: Upload or Update .sh, .png, .jpg, .jpeg Files in GCS (Flatten Structure)

on:
  push:
    branches:
      - main  # Trigger on commits to the main branch

jobs:
  upload-update-sh-and-image-files:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: 'latest'

    - name: Get changed .sh, .png, .jpg, .jpeg files
      id: changed-files
      run: |
        # List .sh, .png, .jpg, .jpeg files that were added, modified, or renamed
        git diff --name-only --diff-filter=AMR HEAD^ HEAD | grep -E '\.(sh|png|jpg|jpeg)$' > changed_files.txt || true
        cat changed_files.txt

    - name: Upload or update .sh, .png, .jpg, .jpeg files in GCS (Flattened)
      if: success()
      run: |
        while IFS= read -r file; do
          echo "Processing $file..."
          if [ -f "$file" ]; then
            base_name=$(basename "$file")
            echo "Uploading $file as $base_name in GCS..."
            gsutil cp "$file" gs://cloudhustlers/"$base_name"
          else
            echo "File $file does not exist locally. Skipping..."
          fi
        done < changed_files.txt

  upload-md-files-to-public-repo:
    runs-on: ubuntu-latest
    needs: upload-update-sh-and-image-files  # Ensures this runs after the .sh, .png, .jpg, .jpeg files are uploaded

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Git
      run: |
        git config --global user.name "Abhishek-kumar-202063"
        git config --global user.email "ak3072696@gmail.com"

    - name: Clone public repository
      run: |
        git clone https://github.com/Abhishek-kumar-202063/Lab_Solutions.git
      env:
        PUBLIC_REPO_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}

    - name: Get changed .md files
      id: changed-md-files
      run: |
        # List .md files that were added, modified, or renamed
        git diff --name-only --diff-filter=AMR HEAD^ HEAD | grep '\.md$' > changed_md_files.txt || true
        cat changed_md_files.txt

    - name: Copy .md files to public repository
      run: |
        while IFS= read -r file; do
          echo "Copying $file to the public repository..."
          cp "$file" Lab_Solutions/
        done < changed_md_files.txt

    - name: Commit and push changes to public repository
      run: |
        cd Lab_Solutions
        git add .  # Add all changes
        git commit -m "Update .md files"
        git push https://Abhishek-kumar-202063:${{ secrets.PUBLIC_REPO_TOKEN }}@github.com/Abhishek-kumar-202063/Lab_Solutions.git
      env:
        PUBLIC_REPO_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
